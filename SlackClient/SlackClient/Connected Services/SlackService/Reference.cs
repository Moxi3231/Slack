//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SlackClient.SlackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SlackService.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.UGroup[] groupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profession {
            get {
                return this.ProfessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionField, value) != true)) {
                    this.ProfessionField = value;
                    this.RaisePropertyChanged("Profession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.UGroup[] groups {
            get {
                return this.groupsField;
            }
            set {
                if ((object.ReferenceEquals(this.groupsField, value) != true)) {
                    this.groupsField = value;
                    this.RaisePropertyChanged("groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UGroup", Namespace="http://schemas.datacontract.org/2004/07/SlackService.Model")]
    [System.SerializableAttribute()]
    public partial class UGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.User[] adminUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.UChannels[] channelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime creationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.User[] usersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.User[] adminUser {
            get {
                return this.adminUserField;
            }
            set {
                if ((object.ReferenceEquals(this.adminUserField, value) != true)) {
                    this.adminUserField = value;
                    this.RaisePropertyChanged("adminUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.UChannels[] channels {
            get {
                return this.channelsField;
            }
            set {
                if ((object.ReferenceEquals(this.channelsField, value) != true)) {
                    this.channelsField = value;
                    this.RaisePropertyChanged("channels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                if ((this.creationTimeField.Equals(value) != true)) {
                    this.creationTimeField = value;
                    this.RaisePropertyChanged("creationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                if ((this.dateTimeField.Equals(value) != true)) {
                    this.dateTimeField = value;
                    this.RaisePropertyChanged("dateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.User[] users {
            get {
                return this.usersField;
            }
            set {
                if ((object.ReferenceEquals(this.usersField, value) != true)) {
                    this.usersField = value;
                    this.RaisePropertyChanged("users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UChannels", Namespace="http://schemas.datacontract.org/2004/07/SlackService.Model")]
    [System.SerializableAttribute()]
    public partial class UChannels : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.UGroup groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.UMessage[] messagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string purposeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelName {
            get {
                return this.ChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNameField, value) != true)) {
                    this.ChannelNameField = value;
                    this.RaisePropertyChanged("ChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                if ((this.dateTimeField.Equals(value) != true)) {
                    this.dateTimeField = value;
                    this.RaisePropertyChanged("dateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.UGroup group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPublic {
            get {
                return this.isPublicField;
            }
            set {
                if ((this.isPublicField.Equals(value) != true)) {
                    this.isPublicField = value;
                    this.RaisePropertyChanged("isPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.UMessage[] messages {
            get {
                return this.messagesField;
            }
            set {
                if ((object.ReferenceEquals(this.messagesField, value) != true)) {
                    this.messagesField = value;
                    this.RaisePropertyChanged("messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                if ((object.ReferenceEquals(this.purposeField, value) != true)) {
                    this.purposeField = value;
                    this.RaisePropertyChanged("purpose");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UMessage", Namespace="http://schemas.datacontract.org/2004/07/SlackService.Model")]
    [System.SerializableAttribute()]
    public partial class UMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MesssageDecriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.UChannels channelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SlackClient.SlackService.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MesssageDecription {
            get {
                return this.MesssageDecriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MesssageDecriptionField, value) != true)) {
                    this.MesssageDecriptionField = value;
                    this.RaisePropertyChanged("MesssageDecription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.UChannels channel {
            get {
                return this.channelField;
            }
            set {
                if ((object.ReferenceEquals(this.channelField, value) != true)) {
                    this.channelField = value;
                    this.RaisePropertyChanged("channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                if ((this.dateTimeField.Equals(value) != true)) {
                    this.dateTimeField = value;
                    this.RaisePropertyChanged("dateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SlackClient.SlackService.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SlackService.ISlackService")]
    public interface ISlackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/DoWork", ReplyAction="http://tempuri.org/ISlackService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/DoWork", ReplyAction="http://tempuri.org/ISlackService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/RegisterUser", ReplyAction="http://tempuri.org/ISlackService/RegisterUserResponse")]
        bool RegisterUser(SlackClient.SlackService.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/RegisterUser", ReplyAction="http://tempuri.org/ISlackService/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(SlackClient.SlackService.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/CheckUser", ReplyAction="http://tempuri.org/ISlackService/CheckUserResponse")]
        bool CheckUser(SlackClient.SlackService.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlackService/CheckUser", ReplyAction="http://tempuri.org/ISlackService/CheckUserResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAsync(SlackClient.SlackService.User usr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISlackServiceChannel : SlackClient.SlackService.ISlackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SlackServiceClient : System.ServiceModel.ClientBase<SlackClient.SlackService.ISlackService>, SlackClient.SlackService.ISlackService {
        
        public SlackServiceClient() {
        }
        
        public SlackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SlackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SlackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SlackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public bool RegisterUser(SlackClient.SlackService.User usr) {
            return base.Channel.RegisterUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(SlackClient.SlackService.User usr) {
            return base.Channel.RegisterUserAsync(usr);
        }
        
        public bool CheckUser(SlackClient.SlackService.User usr) {
            return base.Channel.CheckUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAsync(SlackClient.SlackService.User usr) {
            return base.Channel.CheckUserAsync(usr);
        }
    }
}
